MadLib: Sick Note

Hello [boss], this is [person's name].

I think I've got that [stomach] virus that is going around [campus].


        for (String word : uniqueWords)
        {
            if (!wordIndex.containsKey(word))
            {
                hlinks = new TreeSet<HTMLLink>();
                htmlink = htmlFileList.get(word);
                hlinks.add(htmlink);
                wordIndex.put(word, hlinks);
            }
            else
            {
                htmlink = htmlFileList.get(word);
                hlinks = wordIndex.get(word);
                hlinks.add(htmlink);
                wordIndex.put(word, hlinks);
            }
//            System.out.println("add + " + s);
//            System.out.println("hlink =>> " + htmlink);
        } 
        
            public LinkedList<String> addWords(WebCrawler web) throws IOException
    {
        TreeSet<String> words;
        LinkedList<String> excludeList, uniqueWords =  new LinkedList<String>();
        words = parseWords(web);
        excludeList = URLUtils.readFile("excludeWords.txt");
        
        for (String s : words)
        {
            if (!excludeList.contains(s))
                uniqueWords.add(s);
        }
        
        //URLUtils.printStack(uniqueWords);
        return uniqueWords;
    }
    
    
        public static String getBaseURL(String url)
    {
        String temp, baseUrl;
        if (url.startsWith("http://"))
        {
            temp = url.replace("http://", "");
            baseUrl = "http://" + temp.replaceAll("[/].*$", "") + "/" + "cbishop/pfun/";
        }
        else if (url.startsWith("https://"))
        {
            temp = url.replace("https://", "");
            baseUrl = "https://" + temp.replaceAll("[/].*$", "") + "/" + "cbishop/pfun/";
        }            
        else
        {
            temp = url;
            baseUrl = temp.replaceAll("[/].*$", "") + "/" + "cbishop/pfun/";
        } 
        
        return baseUrl;
    }